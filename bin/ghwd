#!/usr/bin/env bash

# Try to find an OS opener and use it to open the given URL.
open_url() {
  echo $1

  # Check for various OS openers. Quit as soon as we find one that works.
  # Don't assume this will work, provide a helpful diagnostic if it fails.
  for opener in xdg-open open cygstart "start"; {
    if command -v $opener; then
      open=$opener;
      break;
    fi
  }

  $open "$1" || (echo "Unrecognized OS: Expected to find one of the following launch commands: xdg-open, open, cygstart, start" && exit 1);
  exit 0
}

# Figure out github repo base URL
base_url=$(git config --get remote.origin.url)

# Check if repo is a wiki
[[ $base_url == *github*.wiki.git ]] && wiki=true || wiki=false

# Remove .git from end of string
base_url=${base_url%\.git}

# Fix git@github.com: URLs
base_url=${base_url//git@github\.com:/https:\/\/github\.com\/}

# Fix git://github.com URLS
base_url=${base_url//git:\/\/github\.com/https:\/\/github\.com\/}

# Fix git@bitbucket.org: URLs
base_url=${base_url//git@bitbucket.org:/https:\/\/bitbucket\.org\/}

# Fix git@gitlab.com: URLs
base_url=${base_url//git@gitlab\.com:/https:\/\/gitlab\.com\/}

# Validate that this folder is a git folder
git branch 2>/dev/null 1>&2
if [ $? -ne 0 ]; then
  echo Not a git repo!
  exit $?
fi

# Stop right here if it's a wiki, no need to go further
[[ $wiki = true ]] && open_url ${base_url/%\.wiki/\/wiki}

# Find current directory relative to .git parent
full_path=$(pwd)
git_base_path=$(cd ./$(git rev-parse --show-cdup); pwd)
relative_path=${full_path#$git_base_path} # remove leading git_base_path from working directory

# If filename argument is present, append it
if [ "$1" ]; then
  relative_path="$relative_path/$1"
fi

# Figure out current git branch
# git_where=$(command git symbolic-ref -q HEAD || command git name-rev --name-only --no-undefined --always HEAD) 2>/dev/null
git_where=$(command git name-rev --name-only --no-undefined --always HEAD) 2>/dev/null

# Remove cruft from branchname
branch="${git_where#refs\/heads\/}"
branch="${git_where#remotes\/origin\/}"
branch="${branch#tags\/}"
branch="${branch%^0}"

[[ $base_url == *bitbucket* ]] && tree="src" || tree="tree"
url="$base_url/$tree/$branch$relative_path"

open_url $url
