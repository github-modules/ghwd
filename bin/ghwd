#!/usr/bin/env bash
arg=$1
remote=${arg:-origin}
# Figure out github repo base URL
if ! git remote | grep -q "$arg" ; then
  remote="origin"
fi
base_url=$(git config --get remote.$remote.url)
base_url=${base_url%\.git} # remove .git from end of string

# Fix git@github.com: URLs
base_url=${base_url//git@github\.com:/https:\/\/github\.com\/}

# Fix git://github.com URLS
base_url=${base_url//git:\/\/github\.com/https:\/\/github\.com\/}

# Find current directory relative to .git parent
full_path=$(pwd)
git_base_path=$(cd ./$(git rev-parse --show-cdup); pwd)
relative_path=${full_path#$git_base_path} # remove leading git_base_path from working directory

# If filename argument is present, append it
if [ $1 ] && [ $remote != $1 ]; then
  relative_path="$relative_path/$1"
fi

# If we have an origin and a filename, append it
if [ $1 ] && [ $1 == $remote ] && [ $2 ]; then
  relative_path="$relative_path/$2"
fi

# Figure out current git branch
# git_where=$(command git symbolic-ref -q HEAD || command git name-rev --name-only --no-undefined --always HEAD) 2>/dev/null
git_where=$(command git name-rev --name-only --no-undefined --always HEAD) 2>/dev/null

# Remove cruft from branchname
branch=${git_where#refs\/heads\/}

url="$base_url/tree/$branch$relative_path"

echo $url

# mac and linux-compatible open
open=open
command -v xdg-open && open=xdg-open
$open $url
